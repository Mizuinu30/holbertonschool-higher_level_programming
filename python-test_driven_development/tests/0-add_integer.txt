The ``add_integer`` module
======================

Using ``add``
-------------------

Write a function that adds 2 integers.

    Prototype: def add_integer(a, b=98):
    a and b must be integers or floats, otherwise raise a TypeError exception with the message a must be an integer or b must be an integer
    a and b must be first casted to integers if they are float
    Returns an integer: the addition of a and b
    You are not allowed to import any module

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(3, 5)
8
>>> add_integer(3.5, 5)
8
>>> add_integer(3, 5.5)
8
>>> add_integer(3.5, 5.5)
8
>>> add_integer("3", 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(3, "5")
Traceback (most recent call last):
    ...
TypeError: b must be an integer
>>> add_integer("3", "5")
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> a = float("inf")
>>> b = float("-inf")
>>> add_integer(a, b)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer
>>> add_integer(None, None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(1, None)
Traceback (most recent call last):
    ...
TypeError: b must be an integer
>>> add_integer(9999999999999e999999999993**54444444444444444444444, 5)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer
>>> add_integer(9999999999999e244**999, 5)
Traceback (most recent call last):
    ...
OverflowError: (34, 'Numerical result out of range')
>>> a = float("NaN")
>>> b = 98
>>> add_integer(a, b)
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer
>>> add_integer(, b)
Traceback (most recent call last):
    ...
SyntaxError: invalid syntax
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'